% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_observations.R
\name{get_observations}
\alias{get_observations}
\title{Get historical weather observations from the Frost API}
\usage{
\code{get_observations(client_id, sources, reference_time, elements,
  ...)}
}
\arguments{
\item{client_id}{A string. The client ID to use to send requests to the Frost
API.}

\item{sources}{A character vector. The IDs of the data sources (i.e.
stations) that observed the weather data.}

\item{reference_time}{A string. The time range to get observations for in
either extended ISO-8601 format or the single word "latest".}

\item{elements}{A character vector. The elements to get observations for.
Available elements can be retrieved with the \code{get_elements()}
function.}

\item{maxage}{A string. The maximum observation age as an ISO-8601 period,
such as "P1D". This parameter is only applicable when \code{reference_time
= "latest"}. The default value is "PT3H".}

\item{limit}{A string or a positive integer. The maximum number of
observation times to be returned for each combination of source and
element, counting from the most recent time. This parameter is only
applicable when \code{reference_time = "latest"}. Set \code{limit = "all"}
to get all available times or a positive integer. The default value is 1.}

\item{time_offsets}{A character vector. The time offsets to get observations
for provided as a vector of ISO-8601 periods. If the parameter is not set,
then the response (i.e. output) is not filtered on time offsets.}

\item{time_resolutions}{A character vector. The time resolutions to get
observations for provided as a vector of ISO-8601 periods. If the parameter
is not set, then the response (i.e. output) is not filtered on time
resolutions.}

\item{time_series_ids}{A numeric vector. The internal time series IDs to get
observations for as a vector of integers. If the parameter is not set, then
the response (i.e. output) is not filtered on internal time series ID.}

\item{performance_categories}{A character vector. The performance categories
to get observations for as a vector of letters, e.g. "A", "C". If the
parameter is not set, then the response (i.e. output) is not filtered on
internal time series ID.}

\item{exposure_categories}{A numeric vector. The exposure categories to get
observations for as a vector of integers. If the parameter is not set, then
the response (i.e. output) is not filtered on exposure categories.}

\item{qualities}{A numeric vector. The qualities to get observations for as a
vector of integers. If the parameter is not set, then the response (i.e.
output) is not filtered on quality.}

\item{levels}{A numeric vector. The sensor levels to get observations for as
a vector of integers. If the parameter is not set, then the response (i.e.
output) is not filtered on sensor level.}

\item{include_extra}{A logical or integer. If this parameter is set to 1
or \code{TRUE}, and extra data is available, then this data is included
in the response. Extra data currently consists of the original observation
value and the 16-character control info.}

\item{fields}{A character vector. Fields to include in the response (i.e.
output). If this parameter is specified, then only these fields are
returned in the response. If not specified, then all fields will be
returned in the response.}

\item{return_response}{A logical. If set to \code{TRUE}, then the function
returns the response from the GET request. If set to \code{FALSE}, then the
function returns a dataframe of the content in the response to the GET
request.}
}
\value{
The function returns either a data frame of historical weather
observations or the response of the GET request for the observations,
depending on the value set for the \code{return_response} argument.
}
\description{
\code{get_observations()} retrieves historical weather data from
  the Frost API.
}
\examples{

}
