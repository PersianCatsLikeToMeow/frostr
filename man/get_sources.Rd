% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_sources.R
\name{get_sources}
\alias{get_sources}
\title{Get data on stations that perform observations}
\usage{
get_sources(client_id, ...)

get_sources(client_id,
            ids = NULL,
            types = NULL,
            geometry = NULL,
            nearest_max_count = NULL,
            valid_time = NULL,
            name = NULL,
            country = NULL,
            county = NULL,
            municipality = NULL,
            wmo_id = NULL,
            station_holder = NULL,
            external_ids = NULL,
            icao_code = NULL,
            ship_code = NULL,
            wigos_id = NULL,
            fields = NULL,
            return_response = FALSE)
}
\arguments{
\item{client_id}{A string. The client ID to use to send requests to the
Frost API.}

\item{ids}{A character vector. The Frost API source ID(s) that you want
metadata for the data sources.}

\item{types}{A string. The type of Frost API source that you want
metadata for. Must be set to either "SensorSystem", "InterpolatedDataset",
or "RegionDataset". Defaults to \code{NULL}.}

\item{geometry}{A string. Get Frost API sources defined by a specified
geometry. Geometries are specified as either "nearest(POINT(...))" or
"POLYGON(...)" using well-known text representation for geometry (WKT).}

\item{nearest_max_count}{A string. The maximum number of sources returned
when using "nearest(POINT(...))" for \code{geometry}. Defaults to 1 if
not specified.}

\item{valid_time}{A string. The time interval for which the sources have
been or still are valid (or applicable). Specify as "<date>/<date>" or
"<date>/now" where <date> is a date in the ISO-8601 format (YYYY-MM-DD).
Defaults to "now" if not specified, which returns only currently valid
sources.}

\item{name}{A string. If specified, the request will return a response
filtered on sources with matching names to that specified in \code{name}.}

\item{country}{A string. If specified, the request will return a response
filtered on sources with matching country or country codes to that specified
in \code{country}.}

\item{county}{A string. If specified, the request will return a response
filtered on sources with matching county or county ID to that specified in
\code{county}.}

\item{municipality}{A string. If specified, the request will return a
response filtered on sources with matching municipality or municipality
ID to that specified in \code{municipality}.}

\item{station_holder}{A string. If specified, the request will return a
response filtered on sources with matching station holder names to that
specified in \code{station_holder}.}

\item{external_ids}{A character vector. If specified, the request will
return a response filtered on sources with matching external ids to that
specified in \code{station_holder}.}

\item{icao_code}{A string. If specified, the request will return a response
filtered on sources with matching ICAO codes to that specified in
\code{icao_code}.}

\item{ship_code}{A string. If specified, the request will return a response
filtered on sources with matching ship codes to that specified in
\code{ship_code}.}

\item{wigos_id}{A string. If specified, the request will return a response
filtered on sources with matching WIGOS ids to that specified in
\code{wigos_id}.}

\item{fields}{A character vector. A vector of the fields that should be
present in the response. If not set, then all fields will be retrieved.}

\item{return_response}{A logical. If set to \code{TRUE}, then the function
returns the response from the GET request. If set to \code{FALSE} (default),
then the function returns a dataframe of the content in the response to the
GET request.}

\item{wmo_id}{A string. If specified, the request will return a response
filtered on sources with matching wmo ID to that specified in \code{wmoid}.}
}
\value{
The function returns either a data frame of sources or the
response of the GET request for the sources, depending on the value
set for the \code{return_response} argument.
}
\description{
\code{get_sources()} retrieves data about stations
(i.e. source entities) that observe weather data. The station ids can
be used in \code{get_observations()}, for the `sources` argument, to get
observational data for only the station(s) of interest.
}
\examples{
client.id <- "<YOUR CLIENT ID>"

# Get data for all sources
sources <- get_sources(client_id = client.id)

# Get data for sources in Norway
sources_norway <- get_sources(client.id = client.id,
                              country = "NO")

}
